

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: dwell-postgres
    environment:
      POSTGRES_DB: dwell
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./internal/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    networks:
      - dwell-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d dwell"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Dwell API Application
  dwell-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dwell-api
    environment:
      - SERVER_PORT=8080
      - SERVER_HOST=0.0.0.0
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=dwell
      - DB_SSLMODE=disable
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - COGNITO_USER_POOL_ID=${COGNITO_USER_POOL_ID}
      - COGNITO_CLIENT_ID=${COGNITO_CLIENT_ID}
      - COGNITO_CLIENT_SECRET=${COGNITO_CLIENT_SECRET}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - SNS_TOPIC_ARN=${SNS_TOPIC_ARN}
      - SES_FROM_EMAIL=${SES_FROM_EMAIL}
      - JWT_SECRET_KEY=your-secret-key-change-in-production
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - dwell-network
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: dwell-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dwell-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: dwell-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@dwell.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - dwell-network
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  dwell-network:
    driver: bridge

